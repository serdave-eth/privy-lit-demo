"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@marsidev";
exports.ids = ["vendor-chunks/@marsidev"];
exports.modules = {

/***/ "(ssr)/./node_modules/@marsidev/react-turnstile/dist/index.mjs":
/*!***************************************************************!*\
  !*** ./node_modules/@marsidev/react-turnstile/dist/index.mjs ***!
  \***************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DEFAULT_CONTAINER_ID: () => (/* binding */ DEFAULT_CONTAINER_ID),\n/* harmony export */   DEFAULT_ONLOAD_NAME: () => (/* binding */ DEFAULT_ONLOAD_NAME),\n/* harmony export */   DEFAULT_SCRIPT_ID: () => (/* binding */ DEFAULT_SCRIPT_ID),\n/* harmony export */   SCRIPT_URL: () => (/* binding */ SCRIPT_URL),\n/* harmony export */   Turnstile: () => (/* binding */ Turnstile)\n/* harmony export */ });\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-runtime */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react-jsx-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n/* __next_internal_client_entry_do_not_use__ DEFAULT_CONTAINER_ID,DEFAULT_ONLOAD_NAME,DEFAULT_SCRIPT_ID,SCRIPT_URL,Turnstile auto */ \n\nconst Component = ({ as: Element = \"div\", ...props }, ref)=>{\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Element, {\n        ...props,\n        ref\n    });\n};\nconst Container = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(Component);\nconst SCRIPT_URL = \"https://challenges.cloudflare.com/turnstile/v0/api.js\";\nconst DEFAULT_SCRIPT_ID = \"cf-turnstile-script\";\nconst DEFAULT_CONTAINER_ID = \"cf-turnstile\";\nconst DEFAULT_ONLOAD_NAME = \"onloadTurnstileCallback\";\nconst checkElementExistence = (id)=>!!document.getElementById(id);\nconst injectTurnstileScript = ({ render = \"explicit\", onLoadCallbackName = DEFAULT_ONLOAD_NAME, scriptOptions: { nonce = \"\", defer = true, async = true, id = \"\", appendTo, onError, crossOrigin = \"\" } = {} })=>{\n    const scriptId = id || DEFAULT_SCRIPT_ID;\n    if (checkElementExistence(scriptId)) {\n        return;\n    }\n    const script = document.createElement(\"script\");\n    script.id = scriptId;\n    script.src = `${SCRIPT_URL}?onload=${onLoadCallbackName}&render=${render}`;\n    if (document.querySelector(`script[src=\"${script.src}\"]`)) {\n        return;\n    }\n    script.defer = !!defer;\n    script.async = !!async;\n    if (nonce) {\n        script.nonce = nonce;\n    }\n    if (crossOrigin) {\n        script.crossOrigin = crossOrigin;\n    }\n    if (onError) {\n        script.onerror = onError;\n    }\n    const parentEl = appendTo === \"body\" ? document.body : document.getElementsByTagName(\"head\")[0];\n    parentEl.appendChild(script);\n};\nconst CONTAINER_STYLE_SET = {\n    normal: {\n        width: 300,\n        height: 65\n    },\n    compact: {\n        width: 130,\n        height: 120\n    },\n    invisible: {\n        width: 0,\n        height: 0,\n        overflow: \"hidden\"\n    },\n    interactionOnly: {\n        width: \"fit-content\",\n        height: \"auto\"\n    }\n};\nfunction getTurnstileSizeOpts(size) {\n    let result;\n    if (size !== \"invisible\") {\n        result = size;\n    }\n    return result;\n}\nfunction useObserveScript(scriptId = DEFAULT_SCRIPT_ID) {\n    const [scriptLoaded, setScriptLoaded] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        const checkScriptExists = ()=>{\n            if (checkElementExistence(scriptId)) {\n                setScriptLoaded(true);\n            }\n        };\n        const observer = new MutationObserver(checkScriptExists);\n        observer.observe(document, {\n            childList: true,\n            subtree: true\n        });\n        checkScriptExists();\n        return ()=>{\n            observer.disconnect();\n        };\n    }, [\n        scriptId\n    ]);\n    return scriptLoaded;\n}\nconst Turnstile = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((props, ref)=>{\n    const { scriptOptions, options = {}, siteKey, onWidgetLoad, onSuccess, onExpire, onError, onBeforeInteractive, onAfterInteractive, onUnsupported, onLoadScript, id, style, as = \"div\", injectScript = true, ...divProps } = props;\n    const widgetSize = options.size ?? \"normal\";\n    const [containerStyle, setContainerStyle] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(options.execution === \"execute\" ? CONTAINER_STYLE_SET.invisible : options.appearance === \"interaction-only\" ? CONTAINER_STYLE_SET.interactionOnly : CONTAINER_STYLE_SET[widgetSize]);\n    const containerRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const firstRendered = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(false);\n    const [widgetId, setWidgetId] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)();\n    const [turnstileLoaded, setTurnstileLoaded] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const containerId = id ?? DEFAULT_CONTAINER_ID;\n    const scriptId = injectScript ? scriptOptions?.id || `${DEFAULT_SCRIPT_ID}__${containerId}` : scriptOptions?.id || DEFAULT_SCRIPT_ID;\n    const scriptLoaded = useObserveScript(scriptId);\n    const onLoadCallbackName = scriptOptions?.onLoadCallbackName ? `${scriptOptions.onLoadCallbackName}__${containerId}` : `${DEFAULT_ONLOAD_NAME}__${containerId}`;\n    const renderConfig = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(()=>({\n            sitekey: siteKey,\n            action: options.action,\n            cData: options.cData,\n            callback: onSuccess,\n            \"error-callback\": onError,\n            \"expired-callback\": onExpire,\n            \"before-interactive-callback\": onBeforeInteractive,\n            \"after-interactive-callback\": onAfterInteractive,\n            \"unsupported-callback\": onUnsupported,\n            theme: options.theme ?? \"auto\",\n            language: options.language ?? \"auto\",\n            tabindex: options.tabIndex,\n            \"response-field\": options.responseField,\n            \"response-field-name\": options.responseFieldName,\n            size: getTurnstileSizeOpts(widgetSize),\n            retry: options.retry ?? \"auto\",\n            \"retry-interval\": options.retryInterval ?? 8e3,\n            \"refresh-expired\": options.refreshExpired ?? \"auto\",\n            execution: options.execution ?? \"render\",\n            appearance: options.appearance ?? \"always\"\n        }), [\n        siteKey,\n        options,\n        onSuccess,\n        onError,\n        onExpire,\n        widgetSize,\n        onBeforeInteractive,\n        onAfterInteractive,\n        onUnsupported\n    ]);\n    const renderConfigStringified = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(()=>JSON.stringify(renderConfig), [\n        renderConfig\n    ]);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useImperativeHandle)(ref, ()=>{\n        if (true) {\n            return;\n        }\n        const { turnstile } = window;\n        return {\n            getResponse () {\n                if (!turnstile?.getResponse || !widgetId) {\n                    console.warn(\"Turnstile has not been loaded\");\n                    return;\n                }\n                return turnstile.getResponse(widgetId);\n            },\n            reset () {\n                if (!turnstile?.reset || !widgetId) {\n                    console.warn(\"Turnstile has not been loaded\");\n                    return;\n                }\n                if (options.execution === \"execute\") {\n                    setContainerStyle(CONTAINER_STYLE_SET.invisible);\n                }\n                try {\n                    turnstile.reset(widgetId);\n                } catch (error) {\n                    console.warn(`Failed to reset Turnstile widget ${widgetId}`, error);\n                }\n            },\n            remove () {\n                if (!turnstile?.remove || !widgetId) {\n                    console.warn(\"Turnstile has not been loaded\");\n                    return;\n                }\n                setWidgetId(\"\");\n                setContainerStyle(CONTAINER_STYLE_SET.invisible);\n                turnstile.remove(widgetId);\n            },\n            render () {\n                if (!turnstile?.render || !containerRef.current || widgetId) {\n                    console.warn(\"Turnstile has not been loaded or widget already rendered\");\n                    return;\n                }\n                const id2 = turnstile.render(containerRef.current, renderConfig);\n                setWidgetId(id2);\n                if (options.execution !== \"execute\") {\n                    setContainerStyle(CONTAINER_STYLE_SET[widgetSize]);\n                }\n                return id2;\n            },\n            execute () {\n                if (options.execution !== \"execute\") {\n                    return;\n                }\n                if (!turnstile?.execute || !containerRef.current || !widgetId) {\n                    console.warn(\"Turnstile has not been loaded or widget has not been rendered\");\n                    return;\n                }\n                turnstile.execute(containerRef.current, renderConfig);\n                setContainerStyle(CONTAINER_STYLE_SET[widgetSize]);\n            },\n            isExpired () {\n                if (!turnstile?.isExpired || !widgetId) {\n                    console.warn(\"Turnstile has not been loaded\");\n                    return;\n                }\n                return turnstile.isExpired(widgetId);\n            }\n        };\n    }, [\n        scriptLoaded,\n        widgetId,\n        options.execution,\n        widgetSize,\n        renderConfig,\n        containerRef\n    ]);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        window[onLoadCallbackName] = ()=>setTurnstileLoaded(true);\n        return ()=>{\n            delete window[onLoadCallbackName];\n        };\n    }, [\n        onLoadCallbackName\n    ]);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        if (injectScript && !turnstileLoaded) {\n            injectTurnstileScript({\n                onLoadCallbackName,\n                scriptOptions: {\n                    ...scriptOptions,\n                    id: scriptId\n                }\n            });\n        }\n    }, [\n        injectScript,\n        turnstileLoaded,\n        onLoadCallbackName,\n        scriptOptions,\n        scriptId\n    ]);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        if (scriptLoaded && !turnstileLoaded && window.turnstile) {\n            setTurnstileLoaded(true);\n        }\n    }, [\n        turnstileLoaded,\n        scriptLoaded\n    ]);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        if (!siteKey) {\n            console.warn(\"sitekey was not provided\");\n            return;\n        }\n        if (!scriptLoaded || !containerRef.current || !turnstileLoaded || firstRendered.current) {\n            return;\n        }\n        const id2 = window.turnstile.render(containerRef.current, renderConfig);\n        setWidgetId(id2);\n        firstRendered.current = true;\n    }, [\n        scriptLoaded,\n        siteKey,\n        renderConfig,\n        firstRendered,\n        turnstileLoaded\n    ]);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        if (!window.turnstile) return;\n        if (containerRef.current && widgetId) {\n            if (checkElementExistence(widgetId)) {\n                window.turnstile.remove(widgetId);\n            }\n            const newWidgetId = window.turnstile.render(containerRef.current, renderConfig);\n            setWidgetId(newWidgetId);\n            firstRendered.current = true;\n        }\n    }, [\n        renderConfigStringified,\n        siteKey\n    ]);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        if (!window.turnstile) return;\n        if (!widgetId) return;\n        if (!checkElementExistence(widgetId)) return;\n        onWidgetLoad?.(widgetId);\n        return ()=>{\n            window.turnstile.remove(widgetId);\n        };\n    }, [\n        widgetId,\n        onWidgetLoad\n    ]);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        setContainerStyle(options.execution === \"execute\" ? CONTAINER_STYLE_SET.invisible : renderConfig.appearance === \"interaction-only\" ? CONTAINER_STYLE_SET.interactionOnly : CONTAINER_STYLE_SET[widgetSize]);\n    }, [\n        options.execution,\n        widgetSize,\n        renderConfig.appearance\n    ]);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        if (!scriptLoaded || typeof onLoadScript !== \"function\") return;\n        onLoadScript();\n    }, [\n        scriptLoaded,\n        onLoadScript\n    ]);\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Container, {\n        ref: containerRef,\n        as,\n        id: containerId,\n        style: {\n            ...containerStyle,\n            ...style\n        },\n        ...divProps\n    });\n});\nTurnstile.displayName = \"Turnstile\";\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@marsidev/react-turnstile/dist/index.mjs\n");

/***/ })

};
;